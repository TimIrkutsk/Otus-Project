@startuml
!include <C4/C4_Component>

title Сервис оперативного запаса - Компонентная диаграмма (Уровень 3)

Container_Boundary(operational_stock_service, "Сервис оперативного запаса") {
    Component(replenishment_calculator, "Калькулятор пополнения", "Spring Bean", "Расчет необходимости пополнения линии")
    Component(line_monitor, "Монитор линии", "Spring Bean", "Мониторинг остатков на роботизированных линиях")
    Component(virtual_stock_manager, "Менеджер виртуального запаса", "Spring Bean", "Управление виртуальными партиями на линии")
    Component(emergency_replenishment, "Экстренное пополнение", "Spring Bean", "Обработка критического уровня запаса")
    
    Component(operational_controller, "REST Контроллер", "Spring MVC", "API для управления оперативным запасом")
    Component(line_repository, "Репозиторий линий", "Spring Data", "Доступ к данным роботизированных линий")
    Component(fefo_selector, "Селектор FEFO", "Spring Bean", "Выбор партий по принципу FEFO")
}

' Внутренние связи
Rel(line_monitor, replenishment_calculator, "Уведомление о низком запасе", "Метод вызов")
Rel(replenishment_calculator, fefo_selector, "Запрос партий по FEFO", "Метод вызов")
Rel(virtual_stock_manager, line_monitor, "Обновление данных", "Метод вызов")
Rel(emergency_replenishment, replenishment_calculator, "Принудительный расчет", "Метод вызов")
Rel(operational_controller, line_monitor, "API запросы статуса", "Метод вызов")
Rel(line_repository, virtual_stock_manager, "Сохранение данных", "Метод вызов")

' Внешние зависимости
ContainerDb(stock_db, "База остатков", "PostgreSQL")
Container_Ext(cache_db, "Кэш-хранилище", "Redis")
Container_Ext(message_broker, "Брокер сообщений", "Kafka")
Container_Ext(stock_service, "Сервис остатков", "REST API")
Container_Ext(task_service, "Сервис заданий", "Kafka")
Container_Ext(robot_integration, "Сервис интеграции с роботом", "Kafka")

' Внешние связи
Rel(line_repository, stock_db, "Чтение/запись", "JDBC")
Rel(line_monitor, cache_db, "Кэш текущих остатков", "Redis Protocol")
Rel(replenishment_calculator, stock_service, "Запрос доступных партий", "REST")
Rel(fefo_selector, message_broker, "Создание заданий на пополнение", "Kafka")
Rel(message_broker, task_service, "Передача заданий", "Kafka")
Rel(virtual_stock_manager, robot_integration, "Обновление данных робота", "Kafka")
Rel(emergency_replenishment, message_broker, "Критические уведомления", "Kafka")

Note right of replenishment_calculator {
    <b>Логика пополнения:</b>
    • Мониторинг в реальном времени
    • Расчет точки пополнения
    • Выбор партий по FEFO
    • Учет скорости расхода
}
@enduml